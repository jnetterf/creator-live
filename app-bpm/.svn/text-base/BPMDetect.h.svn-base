/*****************************************************
BPMDetect.h                                rev. 110716

  Part of the Creator Live Music Workstation Project
  Copyright Joshua Netterfield  (trintith@gmail.com)

                 All rights reserved.
*****************************************************/

#ifndef BPMDETECT_H
#define BPMDETECT_H

#include "src/Framework.h"
#include <soundtouch/BPMDetect.h>

struct BPMDetectApp : QObject, Object
{
    Q_OBJECT
    soundtouch::BPMDetect* _bpmAudio;
    AnaBeat* _bpmMidi;
    bool s_sync;
    int s_id;
    static int s_lastId;            /*003*/
    bool s_audioOn;
    bool s_midiOn;
public:
    LIVE_HYBRID
    LIVE_EFFECT
    bool mOn() const{ return s_midiOn; }
    bool aOn() const { return s_audioOn; }
    friend class BPMDetectFrame;

    BPMDetectApp();
    ~BPMDetectApp();

    const bool& isSynced();
    void toggleSync();
    float getBPM();

    virtual void aIn(const float *data, int chan, ObjectChain&p);
    virtual void mIn(const Event *data, ObjectChain&p);
    virtual void lcIn(const Command &datab, ObjectChain &p);

public:
    QByteArray save();
    static BPMDetectApp* load(const QByteArray&);
};

#endif // BPMDETECT_H
