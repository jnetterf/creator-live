/*******************************************************

    Part of the Creator Live Music Production Suite.
Copyright (C) Joshua Netterfield <joshua@nettek.ca> 2012

                  All rights reserved.

*******************************************************/

#include <live/object>
#include <live/midi>
#include <live/midifilter>
#include <live/midievent>
#include <QtConcurrentRun>

#ifndef MIDIEVENTCOUNTER_H
#define MIDIEVENTCOUNTER_H

namespace live {

// This class keeps track of whether a note is on or off. Commands can be sent
// to turn all off all >on> events.
class LIBLIVECORESHARED_EXPORT MidiEventCounter : public live::Object
{
    int on[200];       /*003*/
public:
    LIVE_MIDI
    LIVE_INPUT
    qint16 shift;
    bool mOn() const{ return 1; }
    bool aOn() const { return 0; }
    MidiEventCounter();
    void mIn(const Event *data, ObjectChain*);
    bool isOn(int note);
    int velocity(int note);

    QList<Event> flush();
    void panic();
public:
    virtual ~MidiEventCounter();

    static MidiEventCounter* load(const QByteArray&str);
    QByteArray save();
};

}

#endif // MIDIEVENTCOUNTER_H
